//
//  WelcomeViewController.swift
//  SiberianVIPER
//
//  Created by Sergey Petrachkov on 13/12/2017.
//  Copyright (c) 2017 Sergey Petrachkov. All rights reserved.
//
//  This file was generated by the SergeyPetrachkov VIPER Xcode Templates so
//  you can apply VIPER architecture to your iOS projects
//

import UIKit

class WelcomeViewController: UIViewController {
  // MARK: - UI properties
  
  @IBOutlet weak var progressOverlay: UIView!
  @IBOutlet weak var explanationLabel: UILabel!
  @IBOutlet weak var refreshButton: UIBarButtonItem!
  @IBOutlet weak var nextButton: UIBarButtonItem!
  // MARK: - Essentials
  var presenter : WelcomePresenterInput?

  // MARK: Initializers
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
  }
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
  }
  
  // MARK: - Setup
  private func setup() {
    self.progressOverlay.isHidden = true
    self.nextButton.target = self
    self.nextButton.action = #selector(self.didTapNext)
    self.refreshButton.target = self
    self.refreshButton.action = #selector(self.didTapRefresh)
  }
  
  // MARK: - Lifecycle
  override func viewDidLoad() {
    super.viewDidLoad()
    self.setup()
    self.presenter?.start()
  }
  
  // MARK: - Actions
  @objc fileprivate func didTapRefresh() {
    self.explanationLabel.text = "didTapRefresh"
    self.presenter?.presentSomething()
  }
  @objc fileprivate func didTapNext() {
    self.explanationLabel.text = "didTapNext"
  }
}
extension WelcomeViewController : WelcomePresenterOutput {
  func didChangeState(viewModel: Welcome.DataContext.ViewModel) {
    self.explanationLabel.text = viewModel.text
  }
  
  func didEnterPendingState(visible: Bool, blocking: Bool) {
    self.progressOverlay.isHidden = false
  }
  
  func didExitPendingState() {
    self.progressOverlay.isHidden = true
  }
}
