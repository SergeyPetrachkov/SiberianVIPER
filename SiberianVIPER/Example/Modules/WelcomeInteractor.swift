//
//  WelcomeInteractor.swift
//  SiberianVIPER
//
//  Created by Sergey Petrachkov on 13/12/2017.
//  Copyright (c) 2017 Sergey Petrachkov. All rights reserved.
//
//  This file was generated by the SergeyPetrachkov VIPER Xcode Templates so
//  you can apply VIPER architecture to your iOS projects
//

import UIKit

protocol WelcomeInteractorInput: class {
  var output : WelcomeInteractorOutput? { get set }
  func doSomething(request: Welcome.DataContext.Request)
}

protocol WelcomeInteractorOutput: class {
  func didReceive(response : Welcome.DataContext.Response)
  func didFail(with error: Error)
}

class WelcomeInteractor: WelcomeInteractorInput {
  let service: WelcomeServiceProtocol = WelcomeService()
  weak var output: WelcomeInteractorOutput?
  
  // MARK: Do something
  func doSomething(request: Welcome.DataContext.Request) {
    DispatchQueue.main.asyncAfter(deadline: .now() + 2,
                                  execute: {
      self.output?.didReceive(response: Welcome.DataContext.Response(text: String.randomString(length: 25)))
    })
  }
}

public extension String {
  /// Get a random string of a given length
  /// - parameters:
  ///   - length: desired length
  static func randomString(length: Int) -> String {
    let letters : NSString = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    let len = UInt32(letters.length)
    
    var randomString = ""
    
    for _ in 0 ..< length {
      let rand = arc4random_uniform(len)
      var nextChar = letters.character(at: Int(rand))
      randomString += NSString(characters: &nextChar, length: 1) as String
    }
    return randomString
  }
}
